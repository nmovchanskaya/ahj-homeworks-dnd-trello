!function(){"use strict";class t{constructor(t,e,s){this.id=s||Math.floor(performance.now()),this.text=t,this.category=e}}class e{constructor(t,e){this.type=t,this.name=e,this.tasks=[],this.loadFromLocalStorage()}add(t){this.tasks.push(t),this.saveToLocalStorage()}remove(t){this.tasks=this.tasks.filter((e=>e.id!==t)),this.saveToLocalStorage()}update(e){this.tasks=[],e.forEach((e=>{const s=new t(e.text,this.type,e.id);this.tasks.push(s)})),this.saveToLocalStorage()}saveToLocalStorage(){localStorage.setItem(`taskList_${this.type}`,JSON.stringify(this.tasks))}loadFromLocalStorage(){const e=JSON.parse(localStorage.getItem(`taskList_${this.type}`));e&&e.forEach((e=>{const s=new t(e.text,e.category,e.id);this.tasks.push(s)}))}}class s{constructor(t,s){this.taskType=t,this.containerName=`column_${t}`,this.taskList=new e(t,s),this.onAddTask=this.onAddTask.bind(this),this.onAddSubmit=this.onAddSubmit.bind(this),this.onAddCancel=this.onAddCancel.bind(this),this.onClickProduct=this.onClickProduct.bind(this)}addFormMarkup(){return'\n        <textarea class="task__add_input" name="task_text" placeholder="Type description of new task" rows="5" cols="25" required></textarea>\n        <input type="submit" value="Add task" class="task__add_submit">\n        <input type="button" value="Cancel" class="task__add_cancel">\n    '}bindToDOM(){this.container=document.querySelector(`.${this.containerName}`),this.container.addEventListener("click",this.onClickProduct)}bindToDOMAdd(){this.addForm=this.container.querySelector(".task__add_form"),this.addButton=this.container.querySelector(".task__button_add"),this.taskTextElem=this.addForm.querySelector('[name="task_text"]'),this.cancelButtonAdd=this.addForm.querySelector(".task__add_cancel"),this.addButton.addEventListener("click",this.onAddTask),this.cancelButtonAdd.addEventListener("click",this.onAddCancel),this.addForm.addEventListener("submit",this.onAddSubmit)}renderTask(t){return`\n        <div class="task" data-id="${t.id}">\n            ${t.text}\n            <div class="task_delete" data-id="${t.id}">x</div>\n        </div>\n    `}renderTasks(){const t=this.container.querySelector(".task__button_add"),e=document.createElement("div");e.className="task__container",e.classList.add(`task__container_${this.taskType}`),e.dataset.type=this.taskType,this.container.insertBefore(e,t),this.taskList.tasks.forEach((t=>{const s=this.renderTask(t);e.insertAdjacentHTML("beforeend",s)})),this.taskContainer=e}renderContent(){this.renderTasks();const t=document.createElement("form");t.className="task__add_form",t.name=`task__add_form_${this.taskType}`,t.innerHTML=this.addFormMarkup(),this.container.insertBefore(t,null),this.bindToDOMAdd()}onAddTask(t){this.addForm.classList.toggle("task__add_form_active")}clearTasks(){Array.from(this.taskContainer.querySelectorAll(".task")).forEach((t=>{t.remove()}))}updateTasks(){this.taskList.tasks.forEach((t=>{const e=this.renderTask(t);this.taskContainer.insertAdjacentHTML("beforeend",e)}))}onAddSubmit(e){e.preventDefault();const s=this.taskTextElem.value.trim();this.taskList.add(new t(s)),this.taskTextElem.value="",this.addForm.classList.toggle("task__add_form_active"),this.clearTasks(),this.updateTasks()}onAddCancel(t){this.taskTextElem.value="",this.addForm.classList.toggle("task__add_form_active")}onClickProduct(t){"task_delete"===t.target.className&&(this.taskList.remove(Number(t.target.dataset.id)),t.target.closest("div.task").remove())}update(t){this.taskList.update(t)}}const a=new class{constructor(t){this.containerName=t,this.taskWidgetTodo=new s("todo","To do"),this.taskWidgetInprogress=new s("inprogress","In progress"),this.taskWidgetDone=new s("done","Done"),this.onMouseUp=this.onMouseUp.bind(this),this.onMouseMove=this.onMouseMove.bind(this),this.onMouseDown=this.onMouseDown.bind(this)}bindToDOM(){this.container=document.querySelector(this.containerName),this.taskWidgetTodo.bindToDOM(),this.taskWidgetInprogress.bindToDOM(),this.taskWidgetDone.bindToDOM()}getTasks(e,s){const a=Array.from(e.querySelectorAll(".task")),i=[];return a.forEach((e=>{const a=e.innerText.trim();i.push(new t(a.substring(0,a.length-2),s,Number(e.dataset.id)))})),i}updateWidgets(t,e){"todo"===e?this.taskWidgetTodo.update(t):"inprogress"===e?this.taskWidgetInprogress.update(t):"done"===e&&this.taskWidgetDone.update(t)}onMouseUp(t){const e=t.target,s=t.target.querySelectorAll(".task").length;if("task"===e.className){const t=e.parentElement;t.insertBefore(this.actualElement,e);const s=document.querySelector(`.task__container_${this.actualType}`),a=this.getTasks(s,this.actualType);if(this.updateWidgets(a,this.actualType),t.dataset.type!==s.dataset.type){const e=this.getTasks(t,t.dataset.type);this.updateWidgets(e,t.dataset.type)}this.taskWithSpace&&(this.taskWithSpace.style.borderTop=0),this.actualElement.classList.remove("dragged"),this.actualElement=void 0,document.documentElement.removeEventListener("mouseup",this.onMouseUp),document.documentElement.removeEventListener("mousemove",this.onMouseMove)}else if((t.target.classList.contains("column")||t.target.classList.contains("column_title")||t.target.classList.contains("task__button_add"))&&0===s){let e;e=t.target.classList.contains("column")?t.target.querySelector(".task__container"):t.target.closest("div.column").querySelector(".task__container"),e.insertBefore(this.actualElement,null);const s=document.querySelector(`.task__container_${this.actualType}`),a=this.getTasks(s,this.actualType);this.updateWidgets(a,this.actualType);const i=this.getTasks(e,e.dataset.type);this.updateWidgets(i,e.dataset.type),this.actualElement.classList.remove("dragged"),this.actualElement=void 0,document.documentElement.removeEventListener("mouseup",this.onMouseUp),document.documentElement.removeEventListener("mousemove",this.onMouseMove)}else this.actualElement.classList.remove("dragged"),this.actualElement=void 0,document.documentElement.removeEventListener("mouseup",this.onMouseUp),document.documentElement.removeEventListener("mousemove",this.onMouseMove)}onMouseMove(t){this.actualElement.style.top=`${t.clientY}px`,this.actualElement.style.left=t.clientX-this.shiftX+"px",this.timeout&&clearTimeout(this.timeout),this.timeout=setTimeout((()=>this.createEmptySpace(t)),200)}createEmptySpace(t){this.taskWithSpace&&(this.taskWithSpace.style.borderTop=0),this.actualElement&&"task"===t.target.className&&(t.target.style.borderTop=`${this.actualElement.offsetHeight}px solid lightgray`,this.taskWithSpace=t.target)}onMouseDown(t){t.preventDefault(),"task"===t.target.className&&(this.actualElement=t.target,this.actualType=t.target.parentElement.dataset.type,this.actualElement.style.width=`${this.actualElement.offsetWidth}px`,this.actualElement.classList.add("dragged"),this.shiftX=t.offsetX,document.documentElement.addEventListener("mouseup",this.onMouseUp),document.documentElement.addEventListener("mousemove",this.onMouseMove))}renderContent(){this.taskWidgetTodo.renderContent(),this.taskWidgetInprogress.renderContent(),this.taskWidgetDone.renderContent(),this.taskWidgetTodo.taskContainer.addEventListener("mousedown",this.onMouseDown),this.taskWidgetInprogress.taskContainer.addEventListener("mousedown",this.onMouseDown),this.taskWidgetDone.taskContainer.addEventListener("mousedown",this.onMouseDown)}}(".container");a.bindToDOM(),a.renderContent()}();